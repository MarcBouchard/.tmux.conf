#-- TERMINAL ------------------------------------------------------{{{

# Set the TERM variable to tmux-256color with italics via custom iTerm2 config.
# See (https://medium.com/@dubistkomisch/how-to-actually-get-italics-and-true-colour-to-work-in-iterm-tmux-vim-9ebe55ebc2be).
set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# set -g default-command "reattach-to-user-namespace -l $SHELL"

# No delay for escape key press.
set -sg escape-time 0


# Use global clipboard accross all windows and panes.
set -gs set-clipboard extend


# Increase the maximum scrollback buffer size.
set -g history-limit 50000


# Enable mouse control (clickable windows, panes, resizable panes).
set -g mouse on


# }}}
#-- KEY MAPPINGS --------------------------------------------------{{{

# Modifer prefix C-b remapped to the Caps-lock key using the Seil and Karabiner applications. Setup found at: https://gist.github.com/burtlo/3788048.
# Remmap modifier prefix to 'ยง' to work with Karabiner + Seil.
# set -g prefix 'ยง'
# bind 'ยง' send-prefix
set -g prefix C-a
bind C-a send-prefix
unbind-key C-b
# bind a last-window

# Toggle the status line display.
bind-key q set-option status


# Reload tmux config.
bind r source-file ~/.config/.tmux/.tmux.conf \; display ".tmux.conf reloaded!"


# Prompt for window name upon creating a new window.
bind C command-prompt -p "Name of new window: " "new-window -n '%%'"


# Use VIM bindings.
set -g status-keys vi


# VIM bindings for copy-mode, choose-...
setw -g mode-keys vi


# Vim style smart pane switching and traversal with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator.
# and: https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
# bind h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
# bind j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
# bind k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
# bind l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind \ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
# bind -T copy-mode-vi C-h select-pane -L
# bind -T copy-mode-vi C-j select-pane -D
# bind -T copy-mode-vi C-k select-pane -U
# bind -T copy-mode-vi C-l select-pane -R
# bind -T copy-mode-vi C-\ select-pane -l

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l


# Vi copypaste mode.
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection


# Split panes vertically and horizontally.
bind v split-window -h
bind b split-window


# Unbind previous vertical/horizontal split bindings.
unbind '"'
unbind %


# Bind " to the previously selected window.
bind '"' last-window

# Manually resize windows.
# bind J resize-pane -D 5
# bind K resize-pane -U 5
# bind H resize-pane -L 5
# bind L resize-pane -R 5

# bind M-j resize-pane -D
# bind M-k resize-pane -U
# bind M-h resize-pane -L
# bind M-l resize-pane -R


# Allows you to set a main-horizontal layout and automatically set the bottom panes proportionally on the bottom every time you do Prefix + m.
# bind m setw main-pane-height 60\; select-layout main-horizontal




# }}}
#-- TMUX CLOCK ----------------------------------------------------{{{

setw -g clock-mode-colour colour166


# }}}
#-- WINDOWS & PANES -----------------------------------------------{{{

# Start window & pane index numbering at 1 instead of 0.
set -g base-index 1
setw -g pane-base-index 1


# Constrain window size to the maximum size of any client connected to *this window*.
setw -g aggressive-resize on


# Automatic renaming will be disabled for the window if you rename it manually.
setw -g automatic-rename on


# Automatically set window title.
# setw -g automatic-rename on
# set -g set-titles on
# Don't rename windows automatically.
# set -g allow-rename off


# Evenly resize splits.
select-layout even-vertical
select-layout even-horizontal


set -g pane-border-fg colour238
set -g pane-border-bg colour235
set -g pane-active-border-fg colour51
set -g pane-active-border-bg colour236


# }}}
#-- STATUS BAR ----------------------------------------------------{{{

# Status line refresh rate (2 seconds).
set -g status-interval 2
set -g status-position bottom
set -g status-attr dim


# Status line.
set -g status-fg colour137
set -g status-bg colour234
set -g status-justify left # left align window list.


# Left status format.
set -g status-left-length 20
set -g status-left ''


# Right status format.
set -g status-right-length 50
set -g status-right '#[fg=colour233,bg=colour245,bold] %H:%M '
set -ga status-right '#[fg=colour233,bg=colour241,dim]  #(tmux-mem-cpu-load -g 0 -i 2 -m 2 -a 0) '


# Default window title colors (box containing window name).
setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr none

# Active window title colors (box containing window name).
setw -g window-status-current-fg colour81
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold


# Window status formats (Text found in containing window box).
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
# setw -g window-status-format " #F#I:#W#F "
# setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "


setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
# setw -g window-status-current-format " #F#I:#W#F "
# setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] W "


# Status status bells.
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1
setw -g window-status-bell-attr bold


# Look into installing powerline later with tmux.
# set -g status-right '#(powerline tmux right)'


# }}}
#-- WINDOW MODE ---------------------------------------------------{{{

# I.e when pulling up the sessions list with Prefix + s.
setw -g mode-fg colour196
setw -g mode-bg colour238
setw -g mode-attr bold


# }}}
#-- BELLS & ALARMS ------------------------------------------------{{{

# set -g visual-bell off
# set -g bell-action none
# set -g visual-silence off
# set -g visual-activity off
# setw -g monitor-activity off


# Activity monitoring
# setw -g monitor-activity on
# set -g visual-activity on


# Focus events enabled for terminals that support them.
set -g focus-events on


# }}}
#-- MESSAGING -----------------------------------------------------{{{

# i.e message displayed when sourcing .tmux.conf.

# tmux messages are displayed for 4 seconds.
set -g display-time 1300


# Message styles.
set -g message-fg colour232
set -g message-bg colour166
set -g message-attr bold


# }}}
#-- COMMAND-LINE --------------------------------------------------{{{

# When entering the command mode with Prefix + : .
set -g message-command-fg blue
set -g message-command-bg black


# }}}
#-- PLUGINS -------------------------------------------------------{{{

# Set the new tmux.conf configuration folder.
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/.tmux'


# TPM requires this plugin form to properly load plugins when sourcing
# a tmux.conf that's different from the default directory. I.e when
# invoking tmux with the -f flag.
set -g @tpm_plugins '                \
	tmux-plugins/tpm                 \
 '


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf).
run '~/.config/.tmux/plugins/tpm/tpm'


# }}}
